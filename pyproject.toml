[project]
name = "lastfm"
version = "0.3.0"
description = "Simple Last.fm app"
authors = [{ name = "Eirik Rolland Enger <engeir@pm.me>", email = "engeir@pm.me" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "basemap>=1.4.1",
    "geopy>=2.4.1",
    "ipython>=8.22.1",
    "lyricsgenius>=3.0.1",
    "matplotlib>=3.8.3",
    "pandas>=2.2.1",
    "pendulum>=3.0.0",
    "pillow>=10.2.0",
    "plastik>=0.5.0",
    "pylast>=5.2.0",
    "pytz>=2024.1",
    "requests>=2.31.0",
    "termcolor>=2.4.0",
    "reflex>=0.4.4",
    "python-dotenv>=1.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "mypy>=1.8.0",
    "pre-commit>=3.6.2",
    "pre-commit-hooks>=4.5.0",
    "pydoclint>=0.4.1",
    "pydocstringformatter>=0.7.3",
    "pytest>=8.0.1",
    "ruff>=0.2.2",
    "types-decorator>=5.1.8.20240106",
    "types-pytz>=2024.1.0.20240203",
    "types-requests>=2.31.0.20240218",
    "types-six>=1.16.21.20240106",
    "xdoctest>=1.1.3",
]

[tool.rye.scripts]
dev = { cmd = "reflex run" }

[tool.mypy]
files = ["lastfm", "tests"]
ignore_missing_imports = true
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

# Same as Black.
line-length = 88

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
per-file-ignores = {}
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = [ # https://docs.astral.sh/ruff/rules/
  "B",  # flake8-bugbear
  "D",  # pydocstyle
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
  "PL", # pylint
  "Q",  # flake8-quotes
  "UP", # pyupgrade
]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]  # These are the default
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
  # "COM812", # Since we don't select COM, this is already ignored
  # "COM819", # Since we don't select COM, this is already ignored
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "E266",
  "E501",
  # "ISC001", # Since we don't select ISC, this is already ignored
  # "ISC002", # Since we don't select ISC, this is already ignored
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  # "W191",  # Since we don't select W, this is already ignored
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-import-conventions]
[tool.ruff.lint.flake8-import-conventions.aliases]
# Declare the default aliases.
"matplotlib.pyplot" = "plt"
numpy = "np"
scipy = "sp"
xarray = "xr"

[tool.ruff.lint.isort]
case-sensitive = true
known-local-folder = ["lastfm"]

[tool.lint.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
profile = "black"
combine_as_imports = true

[tool.lint.pydocstringformatter]
write = true
strip-whitespaces = true
split-summary-body = false
numpydoc-section-hyphen-length = false
style = ["pep257", "numpydoc"]
